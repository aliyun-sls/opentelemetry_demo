default:
  image:
    repository: <registry>/<namespace>/demo
    tag: latest
    pullSecrets:
      - name: demo
components:
  redis:
    enabled: true
  mysql:
    enabled: true
  marketing:
    labels:
      acs.cms.workspace: "<workspace>"
  promotion:
    labels:
      acs.cms.workspace: "<workspace>"
  notification:
    labels:
      acs.cms.workspace: "<workspace>"
  ads:
    labels:
      acs.cms.workspace: "<workspace>"
  valkey-cart:
    imageOverride:
      repository: "<registry>/<namespace>/valkey"
      tag: "7.2-alpine"
  accounting:
    initContainers:
      - name: wait-for-kafka
        image: <registry>/<namespace>/busybox:latest
        command: ["sh", "-c", "until nc -z -v -w30 kafka 9092; do echo waiting for kafka; sleep 2; done;"]
  product-catalog:
    labels:
      acs.cms.workspace: "<workspace>"
  ad:
    labels:
      acs.cms.workspace: "<workspace>"
  recommendation:
    labels:
      acs.cms.workspace: "<workspace>"
  cart:
    initContainers:
      - name: wait-for-valkey-cart
        command: ["sh", "-c", "until nc -z -v -w30 valkey-cart 6379; do echo waiting for valkey-cart; sleep 2; done;"]
        image: <registry>/<namespace>/busybox:latest
  checkout:
    labels:
      acs.cms.workspace: "<workspace>"
    initContainers:
      - name: wait-for-kafka
        image: <registry>/<namespace>/busybox:latest
        command: ["sh", "-c", "until nc -z -v -w30 kafka 9092; do echo waiting for kafka; sleep 2; done;"]
  fraud-detection:
    labels:
      acs.cms.workspace: "<workspace>"
    initContainers:
      - name: wait-for-kafka
        image: <registry>/<namespace>/busybox
        command: ["sh", "-c", "until nc -z -v -w30 kafka 9092; do echo waiting for kafka; sleep 2; done;"]
  flagd:
    imageOverride:
      repository: "<registry>/<namespace>/flagd"
      tag: "v0.11.1"
    initContainers:
      - name: init-config
        image: <registry>/<namespace>/busybox
        command: ["sh", "-c", "cp /config-ro/demo.flagd.json /config-rw/demo.flagd.json && cat /config-rw/demo.flagd.json"]
        volumeMounts:
          - mountPath: /config-ro
            name: config-ro
          - mountPath: /config-rw
            name: config-rw
secret:
  enabled: true
  data:
    #KAFKA_SERVICE_ADDR: ""
    MYSQL_ENDPOINT: ""
    MYSQL_PASSWORD: ""
    MYSQL_USER: ""
    REDIS_ENDPOINT: ""
    REDIS_PASSWORD: ""